@using Kendo.Mvc.Grid.CRUD.Models;

@model IEnumerable<CustomerSearch>

<legend>Customer</legend>

@section Breadcrumb
{
<div class="breadcrumbs" id="breadcrumbs">
	<ul class="breadcrumb">
		<li>
			<i class="icon-home home-icon"></i>
			<a href="/Home">Home</a>

			<span class="divider">
				<i class="icon-angle-right arrow-icon"></i>
			</span>
		</li>

		@*<li>
			<a href="#">Other Pages</a>

			<span class="divider">
				<i class="icon-angle-right arrow-icon"></i>
			</span>
		</li>*@

		<li class="active">Customers</li>

	</ul><!--.breadcrumb-->

	<div class="nav-search" id="nav-search">
		<form class="form-search">
			<span class="input-icon">
				<input type="text" placeholder="Search ..." class="input-small nav-search-input" id="nav-search-input" autocomplete="off" />
				<i class="icon-search nav-search-icon"></i>
			</span>
		</form>
	</div><!--#nav-search-->
</div>
}

<div class="span6" >
	<div id="grid"></div>

@*<form method="post" action="Customer/CustomerCreate"> REPLACED BY LINE BELOW!!!??????    *@
<form>
    <button class="btn btn-app btn-grey btn-mini radius-4" name="button" value="add">
        <i class="icon-plus-sign"></i>
        New
    </button>

    <input type="button" id="btnEdit" value="Edit" class="btn btn-app btn-success btn-mini radius-4" />

    @*<button class="btn btn-app btn-success btn-mini radius-4" name="button" value="edit">
        <i class=" icon-edit">
        </i>
        Edit
    </button>*@
</form>

</div>

<div class="span4" >
	<p class="lead">Widgets Here</p>
</div>


<script>
    $(function () {
        //$(".k-grid-add").click(function () {
        //    //window.location.href = "/customer/customercreate";
        //    alert("anything");
        //});

        $("#grid").kendoGrid({
            height: 350,
            columns: [
                        { field: "CustomerID", hidden: false },
                        { field: "AROrgName", title: "Customer Name", maxwidth: "20" },
                        { field: "ARCity", maxwidth: "40" },
                        { field: "State", title: "State" }
            ],
            editable: false,
            navigatable: true,
            pageable: true,
            sortable: true,
            filterable: true,
            selectable: "row",
            change: showDetails,
            //toolbar: [{ name: "create", text: "Add New" }, { name: "edit", text: "Edit Selected" }], // standard toolbar commands code
            //toolbar: kendo.template($("#template").html()), //custom toolbar

            dataSource: {
                serverPaging: true,
                serverFiltering: true,
                serverSorting: true,
                pageSize: 10,
                schema: {
                    data: "Data",
                    total: "Total",
                    model: { // define the model of the data source. Required for validation and property types.
                        //uid: "CustomerID",
                        fields: {
                            CustomerID: { editable: false, nullable: false },
                            AROrgName: { type: "string", validation: { required: true } },
                            ARCity: { type: "string", validation: { required: true } },
                            ARStateProvID: { type: "int", validation: { required: true } },
                            CreatedDateTime: { editable: false, type: "datetime", nullable: true }
                        }
                    }
                },

                batch: false, // enable batch editing - changes will be saved when the user clicks the "Save changes" button
                transport:
                    {
                        read:
                            {
                                url: "@Url.Action("Read", "Customer")", //specify the URL which should return the records. This is the Read method of the HomeController.
                                contentType: "application/json",
                                type: "POST" //use HTTP POST request as by default GET is not allowed by ASP.NET MVC
                            },
                        @*create:
                            {
                                url: "@Url.Action("CustomerCreate", "Customer")", //specify the URL which should create new records. This is the Create method of the HomeController.
                                type: "GET", //use HTTP POST request as the default GET is not allowed for ASMX
                                //contenttype: "application/json; charset=utf-8",
                                //dataType: "json"
                            },
                        update:
                            {
                                url: "@Url.Action("Update", "Customer")", //specify the URL which should update the records. This is the Update method of the HomeController.
                                type: "POST" //use HTTP POST request as by default GET is not allowed by ASP.NET MVC
                            },
                        destroy:
                            {
                                url: "@Url.Action("Destroy", "Customer")", //specify the URL which should destroy the records. This is the Destroy method of the HomeController.
                                //contentType: "application/json",
                                type: "POST", //use HTTP POST request as by default GET is not allowed by ASP.NET MVC
                                //dataType: "json"
                            },*@

                        parameterMap: function (data, operation) {
                            if (operation != "read") {
                                // post the products so the ASP.NET DefaultModelBinder will understand them:
                                //products[0].Name="name"
                                //products[0].ProductID =1
                                //products[1].Name="name"
                                //products[1].ProductID =1

                                var result = {};

                                for (var i = 0; i < data.models.length; i++) {
                                    var customer = data.models[i];

                                    for (var member in customer) {
                                        result["customers[" + i + "]." + member] = customer[member];
                                    }
                                }

                                return result;
                            }

                            else {
                                return JSON.stringify(data)
                            }
                        }
                    }
            }
        });

        // Disable edit button by default
        $("#btnEdit").attr("disabled", "disabled");
    }); // End DOM ready


    var customerSelectedID = null;

    function showDetails(e) {
        grid = e.sender;

        // Get selected row 
        var currentDataItem = grid.dataItem(this.select());

        //Enable/Disable button
        if (currentDataItem != null && currentDataItem.CustomerID.toString().length > 0) {
            $("#btnEdit").removeAttr("disabled");
            customerSelectedID = 'Customer/Edit/' + currentDataItem.CustomerID;
        }
        else { // Message to user
            $("#btnEdit").attr("disabled", "disabled");
            customerSelectedID = null;
        }
    }

    $("#btnEdit").on("click", function () {
        window.location.href = customerSelectedID;
    })

</script>



@*RETURNS SELECTED ROW IN GRID - WHAT DO I DO WITH THIS??!!*@
@*http://demos.kendoui.com/web/grid/custom-command.html*@
@*<script type="text/javascript">


    var customerSelectedID = function showDetails(e) {
        grid = e.sender;
        var currentDataItem = grid.dataItem(this.select());
        var selectedCustomerID = currentDataItem.CustomerID;
        console.log('Customer/Edit/' + selectedCustomerID);
        return 'Customer/Edit/' + selectedCustomerID;
    }


    $("#btnEdit").on("click", function() 
    {
        window.location.href = customerSelectedID;
    })

</script>*@









@*TEMPLATE FOR CUSTOM GRID TOOLBAR - USE FOR NON-BUTTON ITEMS, IF DEEMED NECESSARY*@        
@*<script type="text/x-kendo-template" id="template">
    <div class="toolbar">
        @*<form method="post" action="Customer/CustomerCreate"> REPLACED BY LINE BELOW!!!??????    *@
        @*<form>
                <button class="btn btn-app btn-grey btn-mini radius-4" name="button" value="add">
                    <i class="icon-plus-sign"></i>
                    New
                </button>

                <button class="btn btn-app btn-success btn-mini radius-4" name="button" value="edit" onclick="showDetails(grid)">
                    <i class=" icon-edit">
                    </i>
                    Edit
                </button>
        </form>
    </div>
</script>*@

@section Scripts
{
    <script src="~/Scripts/date-time/moment.min.js"></script>
    <script src="~/Scripts/custom/pr-date.js"></script>
}




